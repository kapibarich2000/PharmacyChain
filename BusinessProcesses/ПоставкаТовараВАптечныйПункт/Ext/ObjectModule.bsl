Процедура ОдобритьПоставкуПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	ДокументПоставки=СсылкаДокументаПоставки.ПолучитьОбъект();
	ДокументПоставки.СостояниеПоставки=Перечисления.СостояниеПоставки.ПоставкаНеОсущствлена;
	ДокументПоставки.СсылкаНаБизнесПроцесс=Ссылка;
	
	ДокументПоставки.Записать(РежимЗаписиДокумента.Запись);
КонецПроцедуры

Процедура ПроверитьНаличиеТовараПередВыполнением(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	Если НЕ ЗначениеЗаполнено(НаличиеТовараНаСкладе) Тогда
		Сообщить("Не выполнены действия, необходимые для выполнения задачи!", СтатусСообщения.Важное);
   	 	Отказ = Истина;
	КонецЕсли; 
КонецПроцедуры

Процедура ПоставкаТовараНаСкладПриСозданииВложенныхБизнесПроцессов(ТочкаМаршрутаБизнесПроцесса, ФормируемыеБизнесПроцессы, Отказ)
	СостояниеПоставки=Перечисления.СостояниеПоставки.ОжидаетсяПриходТовараНаСклад;
	
	ДокументПоставки=СсылкаДокументаПоставки.ПолучитьОбъект();
	ДокументПоставки.СостояниеПоставки=СостояниеПоставки;
	ДокументПоставки.Записать(РежимЗаписиДокумента.Запись);

	ДокументПоставкиНаСклад = Документы.ПоступленияНаСклад.СоздатьДокумент();
	ДокументПоставкиНаСклад.Дата=ТекущаяДата();
	
	ТаблицаТоваров = Товары.Выгрузить();
	// Заполняем табл часть БП
	Для Каждого СтрТаблТов Из ТаблицаТоваров Цикл
		//Добавляет строку в конец табличной части документа поставки на склад
		СтрТаблПостНаСклад = ДокументПоставкиНаСклад.Товары.Добавить();
    	СтрТаблПостНаСклад.Наименование = СтрТаблТов.Наименование;
    	СтрТаблПостНаСклад.Количество = СтрТаблТов.Количество;
		//Добавляет строку в конец табличной части БП ПоставкаТовараНаСклад
				СтрБППоставкаНаСклад=ФормируемыеБизнесПроцессы[0].Товары.Добавить();
				СтрБППоставкаНаСклад.Наименование = СтрТаблТов.Наименование;
				СтрБППоставкаНаСклад.Количество = СтрТаблТов.Количество;
	КонецЦикла;
	
	ДокументПоставкиНаСклад.Записать();
	// Заполнить табличную часть докупента поставки на склад с составом продукции 
	
КонецПроцедуры

Процедура ПоставкаТовараНаСкладПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	НаличиеТовараНаСкладе=Перечисления.НаличиеТовараНаСкладе.Имеентся;
КонецПроцедуры

Процедура РаспределитьПоставкуПередВыполнением(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	Если НЕ ЗначениеЗаполнено(Склад) Тогда
		Сообщить("Не выполнены действия, необходимые для выполнения задачи!", СтатусСообщения.Важное);
   	 	Отказ = Истина;
	Иначе
		// Обнавляем данные документа
		ДокументПоставки=СсылкаДокументаПоставки.ПолучитьОбъект();
		ДокументПоставки.СоСклада=Склад;
		ДокументПоставки.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
КонецПроцедуры

// Кто печатает заявку, тот и доставляет.
Процедура РаспечататьЗаявкуНаДоставкуПередВыполнением(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	ОсуществляетПоставку=ПараметрыСеанса.ТекущийПользователь;
	// Обнавляем данные документа
	ДокументПоставки=СсылкаДокументаПоставки.ПолучитьОбъект();
	ДокументПоставки.ОсуществляетПоставку=ОсуществляетПоставку;
	ДокументПоставки.Записать(РежимЗаписиДокумента.Запись);
КонецПроцедуры

Процедура ЗагрузитьТоварПередВыполнением(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	СостояниеПоставки=Перечисления.СостояниеПоставки.ТоварДоставляется;
	// Обнавляем данные документа
	ДокументБизнесПроцесса=СсылкаДокументаПоставки.ПолучитьОбъект();
	ДокументБизнесПроцесса.СостояниеПоставки=СостояниеПоставки;
	ДокументБизнесПроцесса.Записать(РежимЗаписиДокумента.Запись);
КонецПроцедуры

Процедура ДоставитьТоварПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	// Обнавляем данные документа
	ДокументПоставки=СсылкаДокументаПоставки.ПолучитьОбъект();
	ДокументПоставки.ДатаПоставки=ТекущаяДата();
	ДокументПоставки.Записать(РежимЗаписиДокумента.Запись);
КонецПроцедуры

Процедура УказатьСостояниеПоставкиПередВыполнением(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	Если СостояниеПоставки=Перечисления.СостояниеПоставки.ТоварДоставляется ИЛИ
		СостояниеПоставки=Перечисления.СостояниеПоставки.ПоставкаНеОсущствлена Тогда
		Сообщить("Не выполнены действия, необходимые для выполнения задачи!", СтатусСообщения.Важное);
   	 	Отказ = Истина;
	Иначе
		// Обнавляем данные документа
		ДокументПоставки=СсылкаДокументаПоставки.ПолучитьОбъект();
		ДокументПоставки.СостояниеПоставки=СостояниеПоставки;
		ДокументПоставки.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
КонецПроцедуры

Процедура СостояниеПоставкиОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	Если СостояниеПоставки=Перечисления.СостояниеПоставки.ПоставкаЦелая Тогда
		 Результат=ТочкаВыбораВарианта.Варианты.ПоставкаЦелая
	 ИначеЕсли СостояниеПоставки=Перечисления.СостояниеПоставки.БракованнаяПоставка Тогда
		 
		 Результат=ТочкаВыбораВарианта.Варианты.БракованнаяПоставка;
	 ИначеЕсли СостояниеПоставки=Перечисления.СостояниеПоставки.НеполнаяПоставка Тогда
		 
		 Результат=ТочкаВыбораВарианта.Варианты.НеполнаяПоставка;
	КонецЕсли
	
КонецПроцедуры

Процедура ПроведениеЗаписиДокументаПоставкиОбработка(ТочкаМаршрутаБизнесПроцесса)
	ДокументПоставки=СсылкаДокументаПоставки.ПолучитьОбъект();		
	ДокументПоставки.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры


