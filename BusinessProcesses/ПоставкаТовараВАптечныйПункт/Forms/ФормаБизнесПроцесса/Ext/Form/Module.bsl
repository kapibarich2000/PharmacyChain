// Карта маршрута

&НаСервере
Процедура ОбновитьКартуМаршрута()	
	БизнесПроцессОбъект = РеквизитФормыВЗначение("Объект");
	КартаМаршрута=БизнесПроцессОбъект.ПолучитьКартуМаршрута();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	 ОбновитьКартуМаршрута();
	 // или можно:
	 //КартаМаршрута=ТекущийОбъект.ПолучитьКартуМаршрута();	
 КонецПроцедуры
 
 
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	// Если потребовалось изменить состав поставки
	 Если Элементы.Товары.ТолькоПросмотр=Ложь Тогда
		 ИзменениеСоставаПосавки();
	 КонецЕсли;
 КонецПроцедуры


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	 ОбновитьКартуМаршрута();
КонецПроцедуры



// Изменение данных о поставленных товарах

&НаСервере
Процедура ИзменениеСоставаПосавки()
	
	  ТаблицаРеальнойПоставки=Объект.Товары.Выгрузить();
	  
	  Если Объект.СсылкаДокументаПоставки.Пустая() Тогда
		  Сообщить("Ссылка на документ не найдена");
	  КонецЕсли;
	  
	  ДокументПоставки=Объект.СсылкаДокументаПоставки.ПолучитьОбъект();
	    
	  ТаблицаПоставкиИзДокумента=ДокументПоставки.Товары.Выгрузить();
	  
	 // Для Каждого СтрДанныхОРеальнойПоставке Из ТаблицаРеальнойПоставки Цикл
		  
		  Для Каждого СтрДанныхПоставкиИзДокумента Из ТаблицаПоставкиИзДокумента Цикл
			СтрДанныхПоставкиИзДокумента.Количество=77;//=СтрДанныхОРеальнойПоставке.Количество  
			Прервать;  
		  КонецЦикла;// СтрДанныхПоставкиИзДокумента
		  
	//	  Прервать;
		
//	  КонецЦикла;//  СтрДанныхОРеальнойПоставке
	  
	  ДокументПоставки.Записать(РежимЗаписиДокумента.Запись);
	
	  //Для Каждого СтрДанныхОРеальнойПоставке Из ДанныеОРеальнойПоставке Цикл
	  //  	ТоварИмеется=Ложь;
	  //  	
	  //  	Для Каждого СтрДанныхПоставкиИзДокумента Из ЗаписиПоставкиИзДокумента Цикл
	  //  			
	  //  		Если  СтрДанныхПоставкиИзДокумента.Товар=СтрДанныхОРеальнойПоставке.Наименование Тогда
	  //  			
	  //  			Если Не СтрДанныхПоставкиИзДокумента.Количество=СтрДанныхОРеальнойПоставке.Количество Тогда
	  //  				СтрДанныхПоставкиИзДокумента.Количество=СтрДанныхОРеальнойПоставке.Количество;	
	  //  			КонецЕсли;
	  //  			
	  //  			ТоварИмеется=Истина;
	  //  			Прервать;
	  //  		КонецЕсли;
	  //  	
	  //  	КонецЦикла;// СтрДанныхПоставкиИзДокумента
	  //  
	  //  	// Привезли товар, который не заказывали
	  //  	Если ТоварИмеется=Ложь Тогда
	  //  		НоваяСтрокаВДокументеПоступления = ДокументПоставки.Товары.Добавить();
	  //  		НоваяСтрокаВДокументеПоступления.Товар = СтрДанныхОРеальнойПоставке.Наименование;
	  //  		НоваяСтрокаВДокументеПоступления.Количество = СтрДанныхОРеальнойПоставке.Количество;
	  //  	КонецЕсли;
	  //  	
	  // КонецЦикла;//  СтрДанныхОРеальнойПоставке
	
	  //ДокументПоставки.Записать();
КонецПроцедуры


&НаСервере
Функция проверитьНеобходимостьИзмененияСоставаПоставки(СостояниеПоставки)
	Если Объект.СостояниеПоставки=Перечисления.СостояниеПоставки.БракованнаяПоставка ИЛИ
	Объект.СостояниеПоставки=Перечисления.СостояниеПоставки.НеполнаяПоставка Тогда
		 Возврат Истина;
	Иначе
		 Возврат Ложь;
	КонецЕсли;
КонецФункции


&НаКлиенте
Процедура СостояниеПоставкиПриИзменении(Элемент)
	Если проверитьНеобходимостьИзмененияСоставаПоставки(Объект.СостояниеПоставки)= Истина Тогда
		Сообщить("Измените состав поставки");
		Элементы.Товары.ТолькоПросмотр=Ложь;
		Элементы.КнопкиТаблицыТовары.Видимость=Истина;
	Иначе
		Элементы.Товары.ТолькоПросмотр=Истина;
		Элементы.КнопкиТаблицыТовары.Видимость=Ложь;
		КнопкаСохранитьЗаписьНажата=Истина;
	КонецЕсли;
КонецПроцедуры
